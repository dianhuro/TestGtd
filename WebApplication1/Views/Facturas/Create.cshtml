@model WebApplication1.Models.Factura

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Factura</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.NumeroFactura,"Número de Factura", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumeroFactura, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumeroFactura, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Fecha,"Fecha dd/mm/yyyy", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Fecha, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Fecha, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TipodePago,"Tipo de Pago", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TipodePago, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TipodePago, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DocumentoCliente,"Documento del cliente", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DocumentoCliente, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DocumentoCliente, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NombreCliente,"Nombre del cliente", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NombreCliente, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NombreCliente, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Subtotal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Subtotal, new { htmlAttributes = new { @class = "form-control", @id = "Subtotal", @Value = "0", @min = "0",@readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Subtotal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Descuento,"Descuento (%)", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Descuento, new { htmlAttributes = new { @class = "form-control", @id = "Descuento", @Value = "0", @min = "0", @max = "100", @onchange = "calculardescuento();" } })
                @Html.ValidationMessageFor(model => model.Descuento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IVA,"IVA (%)", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IVA, new { htmlAttributes = new { @class = "form-control", @id = "IVA", @Value = "0", @min = "0", @max = "100", @onchange = "calculariva();" } })
                @Html.ValidationMessageFor(model => model.IVA, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TotalDescuento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TotalDescuento, new { htmlAttributes = new { @class = "form-control", @Value = "0", @readonly = "readonly", @id = "TotalDescuento" } })
                @*@Html.ValidationMessageFor(model => model.TotalDescuento, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TotalImpuesto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TotalImpuesto, new { htmlAttributes = new { @class = "form-control", @Value = "0", @readonly = "readonly", @id = "TotalImpuesto" } })
                @*@Html.ValidationMessageFor(model => model.TotalImpuesto, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Total, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Total, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @id = "Total", @Value = "0" } })
                @Html.ValidationMessageFor(model => model.Total, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
@if (TempData["mensaje"] != null)
{
    <script language="javascript">
        alert('@TempData["mensaje"].ToString()');
    </script>
}
@if (TempData["mensajeerror"] != null)
{
    <script language="javascript">
        alert('@TempData["mensajeerror"].ToString()');
    </script>
}
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script type="text/javascript">

    function calculardescuento() {
        var subtotal = parseFloat($("#Subtotal").val());
        var descuento = parseFloat($("#Descuento").val());
        var calculus = subtotal * descuento / 100;
        $("#TotalDescuento").val(calculus); //This shows the calculated field
        calculartotal();
    }

    function calculariva() {
        var subtotal = parseFloat($("#Subtotal").val());
        var Iva = parseFloat($("#IVA").val());
        var calculus = subtotal * Iva / 100;
        $("#TotalImpuesto").val(calculus); //This shows the calculated field
        calculartotal();
    }

    function calculartotal() {
        var subtotal = parseFloat($("#Subtotal").val());
        var Iva = parseFloat($("#TotalImpuesto").val());
        var descuento = parseFloat($("#TotalDescuento").val());
        var calculus = subtotal - descuento + Iva;
        $("#Total").val(calculus); //This shows the calculated field
    }

</script>
